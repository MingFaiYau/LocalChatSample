{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","userName","setUserName","messages","setMessages","resetMessages","useCallback","addMessage","newMessage","prev","concat","className","AskNamePage","text","setText","type","value","onChange","e","target","onClick","Header","Content","MessageList","map","message","id","MessageItem","author","date","MessageContent","MessageAuthor","MessageDate","InputBar","Date","getTime","toISOString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAGe,SAASA,IAAO,IAAD,EACIC,IAAMC,SAAS,IADnB,mBACrBC,EADqB,KACXC,EADW,OAEIH,IAAMC,SAAS,IAFnB,mBAErBG,EAFqB,KAEXC,EAFW,KAGtBC,EAAgBN,IAAMO,aAAY,WACtCF,EAAY,MACX,IAEGG,EAAaR,IAAMO,aAAY,SAACE,GACpCJ,GAAY,SAACK,GAAD,OAAUA,EAAKC,OAAOF,QACjC,IAEH,OACE,sBAAKG,UAAU,gBAAf,WACIV,GAAY,cAAC,EAAD,CAAaC,YAAaA,IACvCD,GACC,qCACE,cAAC,EAAD,CAAQI,cAAeA,IACvB,cAAC,EAAD,CACEF,SAAUA,EACVI,WAAYA,EACZN,SAAUA,UAQtB,IAAMW,EAAc,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,YAAkB,EACfH,IAAMC,SAAS,IADA,mBAChCa,EADgC,KAC1BC,EAD0B,KAYvC,OACE,sBAAKH,UAAU,0BAAf,UACE,uBAAOI,KAAK,OAAOC,MAAOH,EAAMI,SALnB,SAACC,GAChBJ,EAAQI,EAAEC,OAAOH,UAKf,uBAAOD,KAAK,SAASC,MAAO,QAASI,QAZrB,WACbP,IACLX,EAAYW,GACZC,EAAQ,YAcNO,EAAS,SAAC,GAAuB,IAArBhB,EAAoB,EAApBA,cAChB,OACE,sBAAKM,UAAU,oBAAf,UACE,yCACA,uBAAOI,KAAK,SAASC,MAAO,IAAKI,QAASf,QAK1CiB,EAAU,SAAC,GAAwC,IAAtCnB,EAAqC,EAArCA,SAAUI,EAA2B,EAA3BA,WAAYN,EAAe,EAAfA,SACvC,OACE,sBAAKU,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaR,SAAUA,IACvB,cAAC,EAAD,CAAUI,WAAYA,EAAYN,SAAUA,QAK5CsB,EAAc,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACrB,OACE,qBAAKQ,UAAU,yBAAf,SACGR,EAASqB,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CACEd,UAAU,sBAEVc,QAASA,GADJA,EAAQC,UAQjBC,EAAc,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACrB,OACE,sBAAKd,UAAU,yBAAf,UACE,cAAC,EAAD,CAAeiB,OAAQH,EAAQG,SAC/B,cAAC,EAAD,CAAgBf,KAAMY,EAAQZ,OAC9B,cAAC,EAAD,CAAagB,KAAMJ,EAAQI,WAK3BC,EAAiB,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KACxB,OAAO,qBAAKF,UAAU,iCAAf,SAAiDE,KAGpDkB,EAAgB,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OACvB,OAAO,qBAAKjB,UAAU,sBAAf,SAAsCiB,KAGzCI,EAAc,SAAC,GAAc,IAAZH,EAAW,EAAXA,KACrB,OAAO,qBAAKlB,UAAU,oBAAf,SAAoCkB,KAGvCI,EAAW,SAAC,GAA8B,IAA5B1B,EAA2B,EAA3BA,WAAYN,EAAe,EAAfA,SAAe,EACrBF,IAAMC,SAAS,IADM,mBACtCa,EADsC,KAChCC,EADgC,KAmB7C,OACE,sBAAKH,UAAU,sBAAf,UACE,uBAAOI,KAAK,OAAOC,MAAOH,EAAMI,SANnB,SAACC,GAChBJ,EAAQI,EAAEC,OAAOH,UAMf,uBAAOD,KAAK,SAASC,MAAO,IAAKI,QAnBjB,WAClB,GAAKP,EAAL,CACA,IAAML,EAAa,CACjBkB,IAAI,IAAIQ,MAAOC,UACftB,KAAMA,EACNe,OAAQ3B,EACR4B,MAAM,IAAIK,MAAOE,eAEnB7B,EAAWC,GACXM,EAAQ,YCjHZuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzC,EAAD,MAEF0C,SAASC,eAAe,U","file":"static/js/main.08ad3857.chunk.js","sourcesContent":["import React from 'react'\nimport './styles.css'\n\nexport default function App() {\n  const [userName, setUserName] = React.useState('')\n  const [messages, setMessages] = React.useState([])\n  const resetMessages = React.useCallback(() => {\n    setMessages([])\n  }, [])\n\n  const addMessage = React.useCallback((newMessage) => {\n    setMessages((prev) => prev.concat(newMessage))\n  }, [])\n\n  return (\n    <div className=\"app-container\">\n      {!userName && <AskNamePage setUserName={setUserName} />}\n      {userName && (\n        <>\n          <Header resetMessages={resetMessages} />\n          <Content\n            messages={messages}\n            addMessage={addMessage}\n            userName={userName}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n\nconst AskNamePage = ({ setUserName }) => {\n  const [text, setText] = React.useState('')\n\n  const sendMessage = () => {\n    if (!text) return\n    setUserName(text)\n    setText('')\n  }\n\n  const onChange = (e) => {\n    setText(e.target.value)\n  }\n  return (\n    <div className=\"ask-name-page-container\">\n      <input type=\"text\" value={text} onChange={onChange} />\n      <input type=\"button\" value={'Start'} onClick={sendMessage} />\n    </div>\n  )\n}\n\nconst Header = ({ resetMessages }) => {\n  return (\n    <div className=\"header-container \">\n      <div>Header</div>\n      <input type=\"button\" value={'R'} onClick={resetMessages} />\n    </div>\n  )\n}\n\nconst Content = ({ messages, addMessage, userName }) => {\n  return (\n    <div className=\"content-container\">\n      <MessageList messages={messages} />\n      <InputBar addMessage={addMessage} userName={userName} />\n    </div>\n  )\n}\n\nconst MessageList = ({ messages }) => {\n  return (\n    <div className=\"message-list-container\">\n      {messages.map((message) => (\n        <MessageItem\n          className=\"input-bar-container\"\n          key={message.id}\n          message={message}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst MessageItem = ({ message }) => {\n  return (\n    <div className=\"message-item-container\">\n      <MessageAuthor author={message.author} />\n      <MessageContent text={message.text} />\n      <MessageDate date={message.date} />\n    </div>\n  )\n}\n\nconst MessageContent = ({ text }) => {\n  return <div className=\"message-item-content-container\">{text}</div>\n}\n\nconst MessageAuthor = ({ author }) => {\n  return <div className=\"message-item-author\">{author}</div>\n}\n\nconst MessageDate = ({ date }) => {\n  return <div className=\"message-item-date\">{date}</div>\n}\n\nconst InputBar = ({ addMessage, userName }) => {\n  const [text, setText] = React.useState('')\n\n  const sendMessage = () => {\n    if (!text) return\n    const newMessage = {\n      id: new Date().getTime(),\n      text: text,\n      author: userName,\n      date: new Date().toISOString()\n    }\n    addMessage(newMessage)\n    setText('')\n  }\n\n  const onChange = (e) => {\n    setText(e.target.value)\n  }\n\n  return (\n    <div className=\"input-bar-container\">\n      <input type=\"text\" value={text} onChange={onChange} />\n      <input type=\"button\" value={'>'} onClick={sendMessage} />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}