{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","messages","setMessages","resetMessages","useCallback","addMessage","newMessage","prev","concat","className","Header","type","value","onClick","Content","MessageList","map","message","id","MessageItem","text","InputBar","textRef","useRef","sendMessage","current","Date","getTime","focus","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAGe,SAASA,IAAO,IAAD,EACIC,IAAMC,SAAS,IADnB,mBACrBC,EADqB,KACXC,EADW,KAEtBC,EAAgBJ,IAAMK,aAAY,WACtCF,EAAY,MACX,IAEGG,EAAaN,IAAMK,aAAY,SAACE,GACpCJ,GAAY,SAACK,GAAD,OAAUA,EAAKC,OAAOF,QACjC,IAEH,OACE,sBAAKG,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQN,cAAeA,IACvB,cAAC,EAAD,CAASF,SAAUA,EAAUI,WAAYA,OAK/C,IAAMK,EAAS,SAAC,GAAuB,IAArBP,EAAoB,EAApBA,cAChB,OACE,sBAAKM,UAAU,qBAAf,UACE,yCACA,uBAAOE,KAAK,SAASC,MAAO,IAAKC,QAASV,QAK1CW,EAAU,SAAC,GAA8B,IAA5Bb,EAA2B,EAA3BA,SAAUI,EAAiB,EAAjBA,WAC3B,OACE,sBAAKI,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaR,SAAUA,IACvB,cAAC,EAAD,CAAUI,WAAYA,QAKtBU,EAAc,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SACrB,OACE,qBAAKQ,UAAU,yBAAf,SACGR,EAASe,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CACER,UAAU,sBAEVQ,QAASA,GADJA,EAAQC,UAQjBC,EAAc,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACrB,OAAO,qBAAKR,UAAU,yBAAf,SAAyCQ,EAAQG,QAGpDC,EAAW,SAAC,GAAoB,IAAlBhB,EAAiB,EAAjBA,WACZiB,EAAUvB,IAAMwB,SAEhBC,EAAczB,IAAMK,aAAY,WACpC,GAAKkB,EAAQG,QAAQb,MAArB,CACA,IAAMN,EAAa,CACjBY,IAAI,IAAIQ,MAAOC,UACfP,KAAME,EAAQG,QAAQb,OAExBP,EAAWC,GACXgB,EAAQG,QAAQb,MAAQ,GACxBU,EAAQG,QAAQG,WACf,CAACvB,IAEJ,OACE,sBAAKI,UAAU,sBAAf,UACE,uBAAOE,KAAK,OAAOkB,IAAKP,IACxB,uBAAOX,KAAK,SAASC,MAAO,IAAKC,QAASW,QCtEhDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,U","file":"static/js/main.52a21ce1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [messages, setMessages] = React.useState([]);\n  const resetMessages = React.useCallback(() => {\n    setMessages([]);\n  }, []);\n\n  const addMessage = React.useCallback((newMessage) => {\n    setMessages((prev) => prev.concat(newMessage));\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <Header resetMessages={resetMessages} />\n      <Content messages={messages} addMessage={addMessage} />\n    </div>\n  );\n}\n\nconst Header = ({ resetMessages }) => {\n  return (\n    <div className=\"header-containenr \">\n      <div>Header</div>\n      <input type=\"button\" value={\"R\"} onClick={resetMessages} />\n    </div>\n  );\n};\n\nconst Content = ({ messages, addMessage }) => {\n  return (\n    <div className=\"content-container\">\n      <MessageList messages={messages} />\n      <InputBar addMessage={addMessage} />\n    </div>\n  );\n};\n\nconst MessageList = ({ messages }) => {\n  return (\n    <div className=\"message-list-container\">\n      {messages.map((message) => (\n        <MessageItem\n          className=\"input-bar-container\"\n          key={message.id}\n          message={message}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst MessageItem = ({ message }) => {\n  return <div className=\"message-item-container\">{message.text}</div>;\n};\n\nconst InputBar = ({ addMessage }) => {\n  const textRef = React.useRef();\n\n  const sendMessage = React.useCallback(() => {\n    if (!textRef.current.value) return;\n    const newMessage = {\n      id: new Date().getTime(),\n      text: textRef.current.value\n    };\n    addMessage(newMessage);\n    textRef.current.value = \"\";\n    textRef.current.focus();\n  }, [addMessage]);\n\n  return (\n    <div className=\"input-bar-container\">\n      <input type=\"text\" ref={textRef} />\n      <input type=\"button\" value={\">\"} onClick={sendMessage} />\n    </div>\n  );\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}